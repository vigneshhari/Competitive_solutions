sub outputNumber(a)
	declare digits,0
	while a!=0
		push a%10
		a=a/10
		digits=digits+1
	if digits ==0
		push 0
		digits=1
	while digits!=0
		out pop+48
		digits = digits-1

func gcd(a,b)
	while b!=0
		declare t,b
		b=a%b
		a=t
	gcd=a

func lcm(a,b)
	lcm=a*b/gcd(a,b)

func inputNumber()
	declare char
	while char!=10
		char=in
		if (char>=48)&&(char<=57)
			out char
			inputNumber=inputNumber*10+(char-48)

outs "Enter first number: "
declare num1,inputNumber()
out 10
outs "Enter second number: "
declare num2,inputNumber()
out 10
outs "The lowest common multiple of "
outputNumber(num1)
outs " and "
outputNumber(num2)
outs " is "
outputNumber(lcm(num1,num2))
out 10
